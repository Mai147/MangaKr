import Head from "next/head";
import { Inter } from "@next/font/google";
import useAuth from "@/hooks/useAuth";
import { useEffect } from "react";
import Home from "@/components/Home";
import { HomeProvider } from "@/context/HomeContext";
import {
    collection,
    collectionGroup,
    doc,
    getDoc,
    getDocs,
    limit,
    orderBy,
    query,
    startAfter,
    where,
    writeBatch,
} from "firebase/firestore";
import { fireStore } from "@/firebase/clientApp";
import { Button } from "@chakra-ui/react";
import { firebaseRoute } from "@/constants/firebaseRoutes";
import { triGram } from "@/utils/StringUtils";

const inter = Inter({ subsets: ["latin"] });

type HomePageProps = {};

const HomePage: React.FC<HomePageProps> = () => {
    const { setNeedAuth } = useAuth();
    useEffect(() => {
        setNeedAuth(false);
    }, []);

    // const testFunction = async () => {
    //     try {
    //         const batch = writeBatch(fireStore);
    //         const postDocsRef = collectionGroup(fireStore, "posts");
    //         const postDocs = await getDocs(postDocsRef);
    //         postDocs.docs.forEach((doc) => {
    //             batch.update(doc.ref, {
    //                 isAccept: false,
    //             });
    //         });
    //         await batch.commit();
    //         console.log(1);
    //     } catch (error) {
    //         console.log(error);
    //     }
    // };

    // const testFunction = async () => {
    //     const postDocsRef = collection(
    //         fireStore,
    //         firebaseRoute.getCommunityPostRoute("Mqd83dp0gYmH8dsF5EQA")
    //     );
    //     const postDocRef = doc(postDocsRef, "CJhOFtkOGYQL9FvdBGR9");
    //     const lastDoc = await getDoc(postDocRef);
    //     const postQuery = query(
    //         postDocsRef,
    //         orderBy("createdAt", "desc"),
    //         where("isAccept", "==", false),
    //         startAfter(lastDoc),
    //         limit(1)
    //     );
    //     const postDocs = await getDocs(postQuery);
    //     const posts = postDocs.docs.map((doc) => doc.data());
    //     console.log(posts);
    // };

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                {/* <Button onClick={testFunction}>Test</Button> */}
                <HomeProvider>
                    <Home />
                </HomeProvider>
            </main>
        </>
    );
};

export default HomePage;
